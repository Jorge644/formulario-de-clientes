
package prueb;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


public class Tienda extends javax.swing.JFrame {
    DefaultTableModel model;
    Statement sent;
    
  
    public Tienda() {
        initComponents();
        llenarTabla() ;
        inicializarBotones();
        deshabilitar();
        this.setLocationRelativeTo(null);
        tableClientes.setDefaultEditor(Object.class, null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtNombreCliente = new javax.swing.JTextField();
        txtApellidoCliente = new javax.swing.JTextField();
        txtDocCliente = new javax.swing.JTextField();
        cmbTipo = new javax.swing.JComboBox<>();
        cmbCondicion = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        btnGuardar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnNuevo = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableClientes = new javax.swing.JTable();
        btnLimpiar = new javax.swing.JButton();
        txtBuscar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Nombre");

        jLabel2.setText("Apellido");

        jLabel3.setText("Nro. Documento");

        jLabel4.setText("Tipo Documento");

        jLabel5.setText("Condicion Impositiva");

        txtNombreCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreClienteActionPerformed(evt);
            }
        });

        txtApellidoCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtApellidoClienteActionPerformed(evt);
            }
        });

        txtDocCliente.setText(" ");

        cmbTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "DNI", "CUIT", "OTRO", " " }));
        cmbTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTipoActionPerformed(evt);
            }
        });

        cmbCondicion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "A", "B", "X" }));

        jLabel6.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        jLabel6.setText("CLIENTES");

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnModificar.setText("Modificar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        tableClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Nombre", "Apellido", "Nro Documento", "Con. Impositiva", "Tipo Documento"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tableClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableClientesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableClientes);

        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        txtBuscar.setText("Buscar");
        txtBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 428, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addGap(46, 46, 46)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtNombreCliente)
                                        .addComponent(txtApellidoCliente)
                                        .addComponent(txtDocCliente, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)
                                        .addComponent(cmbTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(cmbCondicion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(106, 106, 106)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnModificar))
                            .addComponent(btnEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnNuevo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnGuardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnLimpiar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(txtBuscar))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtNombreCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtApellidoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnGuardar)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtDocCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnModificar))))
                    .addComponent(btnNuevo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(cmbTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(jLabel5))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cmbCondicion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnLimpiar)))))
                    .addComponent(btnEliminar))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNombreClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreClienteActionPerformed

    private void txtApellidoClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtApellidoClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtApellidoClienteActionPerformed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        habilitar();
        this.btnEliminar.setEnabled(false);
        this.btnModificar.setEnabled(false);
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
      
       String nombre= this.txtNombreCliente.getText();
       String apellido=this.txtApellidoCliente.getText();
       String documento=this.txtDocCliente.getText();
       String tipo= String.valueOf(this.cmbTipo.getSelectedItem());
       String condicion=String.valueOf(this.cmbCondicion.getSelectedItem());
       boolean ver=buscarDni(documento);
       
       if(!ver){
           ConexionBD conexion = new ConexionBD();
           Connection con = conexion.getConnection();
       
        try {
            PreparedStatement preparedStmt = con.prepareStatement("insert into clientes (cliente_name,cliente_apellido,nro_documento,Condicion_impositiva,tipo_documento)"+"values (?, ?, ?, ?, ?)");
             preparedStmt.setString(1, nombre);
                preparedStmt.setString(2, apellido);
                preparedStmt.setString(3, documento);
                preparedStmt.setString(4, condicion);
                preparedStmt.setString(5, tipo);
     
            preparedStmt.execute();
           // Cerramos las conexiones, en orden inverso a su apertura
            preparedStmt.close();
            con.close();
            limpiar();

            System.out.println("Datos Agregados Correctamente");
        } catch (SQLException e) {
            System.out.println("error"+e);
        }
       }
       
       
       llenarTabla() ;
       this.btnGuardar.setEnabled(false);
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        limpiar();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void txtBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuscarActionPerformed
      String buscar= JOptionPane.showInputDialog("Ingresa el dni/nombre del cliente");
      buscar(buscar);
      
    }//GEN-LAST:event_txtBuscarActionPerformed

    private void tableClientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableClientesMouseClicked
        activarBotones();
        if(evt.getButton()==1){
           int fila=tableClientes.getSelectedRow();
           habilitar();
           String nombre=String.valueOf(tableClientes.getValueAt(fila,0));
           String apellido=String.valueOf(tableClientes.getValueAt(fila,1));
           String documento=String.valueOf(tableClientes.getValueAt(fila,2));
           String tipo=String.valueOf(tableClientes.getValueAt(fila, 4));
           String carga=String.valueOf(tableClientes.getValueAt(fila, 3));
          
            rellenar(nombre, apellido, documento, tipo, carga);
            this.btnGuardar.setEnabled(false);
                    
        }
    }//GEN-LAST:event_tableClientesMouseClicked

    private void cmbTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTipoActionPerformed
        
    }//GEN-LAST:event_cmbTipoActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
       String nombre= this.txtNombreCliente.getText();
       String apellido=this.txtApellidoCliente.getText();
       String documento=this.txtDocCliente.getText();
       String tipo= String.valueOf(this.cmbTipo.getSelectedItem());
       String condicion=String.valueOf(this.cmbCondicion.getSelectedItem());
       
       ConexionBD conexion = new ConexionBD();
       Connection con = conexion.getConnection();
       
        try {
            PreparedStatement preparedStmt = con.prepareStatement("Update clientes set cliente_name= ? ,cliente_apellido= ? , nro_Documento = ? ,"
                    + "                                             Condicion_impositiva= ? , tipo_documento = ? where nro_Documento= ?");
             preparedStmt.setString(1, nombre);
                preparedStmt.setString(2, apellido);
                preparedStmt.setString(3, documento);
                preparedStmt.setString(4, condicion);
                preparedStmt.setString(5, tipo);
                preparedStmt.setString(6, documento);
     
            preparedStmt.execute();
           // Cerramos las conexiones, en orden inverso a su apertura
            preparedStmt.close();
            con.close();
            limpiar();

            System.out.println("Datos Modificados Correctamente");
        } catch (SQLException e) {
            System.out.println("error"+e);
        }
       llenarTabla() ;
       deshabilitar();
       this.btnGuardar.setEnabled(false);
       this.btnModificar.setEnabled(false);
       this.btnEliminar.setEnabled(false);
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        String documento=this.txtDocCliente.getText();
       ConexionBD conexion = new ConexionBD();
       Connection con = conexion.getConnection();
       
        try {
            PreparedStatement preparedStmt = con.prepareStatement("Delete from clientes where nro_documento = ?");
             preparedStmt.setString(1, documento);
             
            preparedStmt.execute();
           // Cerramos las conexiones, en orden inverso a su apertura
            preparedStmt.close();
            con.close();
            limpiar();

            System.out.println("Datos Eliminado Correctamente");
        } catch (SQLException e) {
            System.out.println("error"+e);
        }
       llenarTabla() ;
       deshabilitar();
       this.btnGuardar.setEnabled(false);
       this.btnModificar.setEnabled(false);
       this.btnEliminar.setEnabled(false);
    }//GEN-LAST:event_btnEliminarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tienda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tienda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tienda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tienda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tienda().setVisible(true);
            }
        });
    }
    
    public void llenarTabla(){
       try{
           
           ConexionBD conexion = new ConexionBD();
           Connection con = conexion.getConnection();
           String [] titulos={ "Nombre", "Apellido","Nro Documento","Con Impositiva","Tipo Documento"};
           String SQL= "select * from clientes";
           model=new DefaultTableModel(null,titulos);
           
           sent=con.createStatement();
           ResultSet rs=sent.executeQuery(SQL);
           String[] fila= new String[5];
           while(rs.next()){
               fila[0]=rs.getString("cliente_name");
               fila[1]=rs.getString("cliente_apellido");
               fila[2]= rs.getString("nro_Documento");
               fila[3]= rs.getString("Condicion_impositiva");
               fila[4]=rs.getString("tipo_documento");
               model.addRow(fila);
           }
           tableClientes.setModel(model);
           sent.close();
           con.close();
          
       }catch(Exception e){
           JOptionPane.showMessageDialog(null, "Error "+e);
       }
    }
    
    public void limpiar(){
        this.txtApellidoCliente.setText("");
        this.txtDocCliente.setText("");
        this.txtNombreCliente.setText("");
        this.cmbCondicion.setSelectedIndex(0);
        this.cmbTipo.setSelectedIndex(0);
    }
    
    public void deshabilitar(){
        this.txtApellidoCliente.setEnabled(false);
        this.txtDocCliente.setEnabled(false);
        this.txtNombreCliente.setEnabled(false);
        this.cmbCondicion.setEnabled(false);
        this.cmbTipo.setEnabled(false);
    }
    
    public void habilitar(){
        this.txtApellidoCliente.setEnabled(true);
        this.txtDocCliente.setEnabled(true);
        this.txtNombreCliente.setEnabled(true);
        this.cmbCondicion.setEnabled(true);
        this.cmbTipo.setEnabled(true);
        this.btnGuardar.setEnabled(true);
    }
    
    public void inicializarBotones(){
        btnEliminar.setEnabled(false);
        btnGuardar.setEnabled(false);
        btnLimpiar.setEnabled(false);
        btnModificar.setEnabled(false);
    }
    
    public void buscar(String SQL){
        ConexionBD conexion = new ConexionBD();
        Connection con = conexion.getConnection();
        try{
           PreparedStatement ps=con.prepareStatement("select * from clientes where cliente_name like ?  or cliente_apellido like ? or nro_Documento like ?");
           ps.setString(1,"%"+SQL+"%");
           ps.setString(2,"%"+SQL+"%");
           ps.setString(3,"%"+SQL+"%");
           
           ResultSet rs= ps.executeQuery();
           
             String [] titulos={ "Nombre", "Apellido","Nro Documento","Con Impositiva","Tipo Documento"};          
             model=new DefaultTableModel(null,titulos);
             String[] fila= new String[5];
                 while(rs.next()){
                 fila[0]=rs.getString("cliente_name");
                 fila[1]=rs.getString("cliente_apellido");
                 fila[2]= rs.getString("nro_Documento");
                 fila[3]= rs.getString("Condicion_impositiva");
                 fila[4]=rs.getString("tipo_documento");
                 model.addRow(fila);
                 
                 } 
             if(model.getRowCount()>0){
                 this.tableClientes.setModel(model);
              }else{
                 JOptionPane.showMessageDialog(null,"No se encontro registro");
                 llenarTabla();
             }
            ps.close();
            con.close();
           
          
        } 
        catch (SQLException e){
            System.out.println("error"+e);
        }
        
    }
    
    public void activarBotones(){
        this.btnEliminar.setEnabled(true);
        this.btnModificar.setEnabled(true);
        this.btnLimpiar.setEnabled(true);
    }
    
    public void rellenar(String nombre,String apellido,String documento,String tipo,String carga){
        this.txtApellidoCliente.setText(apellido);
        this.txtDocCliente.setText(documento);
        this.txtNombreCliente.setText(nombre);
       if(tipo.equals("DNI")){
           this.cmbTipo.setSelectedIndex(1);
       }
       if(tipo.equals("CUIT")){
           this.cmbTipo.setSelectedIndex(2);        
       }
       if(tipo.equals("OTRO")){
           this.cmbTipo.setSelectedIndex(3);
       }
       if(carga.equals("A")){
           this.cmbCondicion.setSelectedIndex(1);
       }
       if(carga.equals("B")){
           this.cmbCondicion.setSelectedIndex(2);
       }
       if(carga.equals("X")){
           this.cmbCondicion.setSelectedIndex(3);
       }
      
        
        
    }
    
    public boolean buscarDni(String dni){
        boolean ver=false;
        try{
             ConexionBD conexion = new ConexionBD();
             Connection con = conexion.getConnection();
             PreparedStatement ps=con.prepareStatement("select * from clientes where nro_Documento = ?");
             ps.setString(1,dni);
          
           
           ResultSet rs= ps.executeQuery();
           if(rs.next()){
               JOptionPane.showMessageDialog(null,"Ya se encuentra un registro con ese documento");
             ver=true;         
           }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,"Error "+ e);
        }
        return ver;
    }
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JComboBox<String> cmbCondicion;
    private javax.swing.JComboBox<String> cmbTipo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableClientes;
    private javax.swing.JTextField txtApellidoCliente;
    private javax.swing.JButton txtBuscar;
    private javax.swing.JTextField txtDocCliente;
    private javax.swing.JTextField txtNombreCliente;
    // End of variables declaration//GEN-END:variables
}
